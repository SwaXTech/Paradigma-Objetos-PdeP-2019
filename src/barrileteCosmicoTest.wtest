import barrileteCosmico.*

describe "Barrilete Cósmico" {

	var garlicSea
	var silverSea
	var lastToninas
	var goodAirs
	var pHari
	
	fixture{
		garlicSea = new Destino()
		garlicSea.nombre("Garlic´s Sea")
		garlicSea.equipajeImprescindible(["Caña de Pescar", "Piloto"])
		garlicSea.precio(2500)
		
		silverSea = new Destino()
		silverSea.nombre("Silver´s Sea")
		silverSea.equipajeImprescindible(["Protector Solar", "Equipo de Buceo"])
		silverSea.precio(1350)
		
		lastToninas = new Destino()
		lastToninas.nombre("Last Toninas")
		lastToninas.equipajeImprescindible(["Vacuna Gripal", "Vacuna B", "Necronomicon"])
		lastToninas.precio(3500)
		
		goodAirs = new Destino()
		goodAirs.nombre("Good Airs")
		goodAirs.equipajeImprescindible(["Cerveza", "Protector Solar"])
		goodAirs.precio(1500)	
		
		barrileteCosmico.agregarDestino(garlicSea)
		barrileteCosmico.agregarDestino(silverSea)	
		barrileteCosmico.agregarDestino(lastToninas)	
		barrileteCosmico.agregarDestino(goodAirs)
		
		pHari = new Usuario()
		pHari.nombre("Pablo Hari")
		pHari.nombreDeUsuario("PHari")
		pHari.lugaresVisitados(#{lastToninas, goodAirs})
		pHari.saldo(1500)
		
	}
	
	test "Los destinos más importantes de Barrilete Cósmico son: Garlic's Sea y Last Toninas"{
		assert.equals(barrileteCosmico.destinosMasImportantes(), #{garlicSea, lastToninas})
	}
	
	test "Aplicar un descuento de 25% a Last Toninas, su precio es de $2625" {
		lastToninas.aplicarDescuento(25)
		assert.equals(2625, lastToninas.precio())
	}
	
	test "Aplicar un descuento de 25% a Last Toninas, tiene el certificado de descuento en su equipaje imprescindible" {
		lastToninas.aplicarDescuento(25)
		assert.that(lastToninas.equipajeImprescindible().contains("Certificado de descuento"))
	}
	
	test "Aplicar un descuento del 15% a todos los destinos de Barrilete Cósmico, 
			Garlic´s sea: $2125
			Silver's Sea: $1147.5
			Last Toninas: $2975
			Good Airs: $1275
			Todos deben poseer el certificado de descuento."
		{
			barrileteCosmico.aplicarDescuento(15)
			assert.equals(2125, garlicSea.precio())
			assert.equals(1147.5, silverSea.precio())
			assert.equals(2975, lastToninas.precio())
			assert.equals(1275, goodAirs.precio())
			assert.that(barrileteCosmico.destinos().all{destino => destino.equipajeImprescindible().contains("Certificado de descuento")})
		}
	
	test "Silver's Sea no es un destino peligroso" {
		assert.notThat(silverSea.esPeligroso())
	}
	
	test "Last Toninas es el único destino peligroso" {
		assert.equals(#{lastToninas}, barrileteCosmico.destinosPeligrosos())
	}
	
	test "Barrilete cósmico es una empresa extrema" {
		assert.that(barrileteCosmico.esEmpresaExtrema())
	}
	test "Carta de destinos de Barrilete Cosmico"{
		assert.equals(#{lastToninas, garlicSea, goodAirs, silverSea}, barrileteCosmico.destinos())
	}
	test "Los kilometros de PHari son 500" {
		assert.equals(500, pHari.obtenerKM())
	}
	test "PHari vuela a Silver's Sea" {
		assert.that(pHari.puedeViajar(silverSea))
		pHari.volarA(silverSea)
		assert.that(pHari.lugaresVisitados().contains(silverSea))
	}
	test "PHari vuela a Silver's Sea y se le descuenta dinero"{
		pHari.volarA(silverSea)
		assert.equals(150, pHari.saldo())
	}
}
